<?php

namespace Madtechservices\ThemeMadmin;

use Backpack\CRUD\ThemeServiceProvider; // Import the missing class
// use Madtechservices\ThemeMadmin\app\Console\Commands\SeederCommand;
// use Madtechservices\ThemeMadmin\app\Exceptions\Handler;
use Illuminate\Contracts\Debug\ExceptionHandler;
use Illuminate\Support\Facades\Blade;
use Illuminate\Support\Facades\Gate;
use Illuminate\Support\ServiceProvider;


// class MadminServiceProvider extends ThemeServiceProvider
class MadminServiceProvider extends ThemeServiceProvider
{
    protected string $vendorName = 'madtechservices';
    protected string $packageName = 'theme-madmin';

    /**
     * The src directory of the add-on.
     *
     * @var string
     */
    protected string $path;
    
    public function __construct($app)
    {
        $this->app = $app;
        $this->path = realpath(__DIR__.'/..');
    }

    /**
     * Bootstrap any application services.
     *
     * @return void
     */
    /**
     * Boot method may be overrided by AddonServiceProvider
     *
     * @return void
     */
    public function boot(): void
    {
        $this->autoboot();
    }

    public function autoboot(): void
    {
        if ($this->packageDirectoryExistsAndIsNotEmpty('resources/lang')) {
            $this->loadTranslationsFrom($this->packageLangsPath(), $this->vendorNameSlashPackageName());
        }

        if ($this->packageDirectoryExistsAndIsNotEmpty('resources/views')) {
            // Load published views
            if (is_dir($this->publishedViewsPath())) {
                $this->loadViewsFrom($this->publishedViewsPath(), $this->vendorNameDotPackageName());
            }

            // Fallback to package views
            $this->loadViewsFrom($this->packageViewsPath(), $this->vendorNameDotPackageName());

            // Add default ViewNamespaces
            foreach (['buttons', 'columns', 'fields', 'filters', 'widgets'] as $viewNamespace) {
                if ($this->packageDirectoryExistsAndIsNotEmpty("resources/views/$viewNamespace")) {
                    ViewNamespaces::addFor($viewNamespace, $this->vendorNameDotPackageName()."::{$viewNamespace}");
                }
            }

            // Add basset view path
            Basset::addViewPath($this->packageViewsPath());
        }

        // if ($this->packageDirectoryExistsAndIsNotEmpty('database/migrations')) {
        //     $this->loadMigrationsFrom($this->packageMigrationsPath());
        // }

        // if ($this->packageDirectoryExistsAndIsNotEmpty('routes')) {
        //     $this->loadRoutesFrom($this->packageRoutesFile());
        // }

        // Publishing is only necessary when using the CLI.
        if ($this->app->runningInConsole()) {
            $this->bootForConsole();
        }
    

        // Remove below
        // $this->publishes([
        //     __DIR__.'/resources/views' => resource_path('vendors/madtechservices/theme-madmin'),
        // ]);
        // $this->publishes([
        //     __DIR__.'/resources/lang' => resource_path('lang'),
        // ]);
        // $this->publishes([
        //     __DIR__.'/resources/css' => resource_path('css'),
        // ]);
        // $this->publishes([
        //     __DIR__.'/resources/assets' => resource_path('assets'),
        // ]);
    
    
        // // TODO: Change the autogenerated stub

        // // Register the theme
        // // $this->loadViewsFrom(__DIR__.'/resources/views', 'theme-madmin');
        // // $this->loadTranslationsFrom(__DIR__.'/resources/lang', 'theme-madmin');
        // // $this->loadRoutesFrom(__DIR__.'/routes/web.php');
        // // $this->loadRoutesFrom(__DIR__.'/routes/api.php');
        // // $this->loadMigrationsFrom(__DIR__.'/database/migrations');
        // // $this->loadFactoriesFrom(__DIR__.'/database/factories');

        // // // Register the theme's publishable resources
        // $this->publishes([
        //     __DIR__.'/resources/views' => resource_path('views/vendor/backpack/theme-madmin'),
        // ], 'views');
        // $this->publishes([
        //     __DIR__.'/resources/lang' => resource_path('lang'),
        // ], 'lang');
        // $this->publishes([
        //     __DIR__.'/resources/assets' => resource_path('assets'),
        // ], 'public');
        // $this->publishes([
        //     __DIR__.'/config' => config_path(),
        // ], 'config');
        // $this->publishes([
        //     __DIR__.'/database/factories' => database_path('factories'),
        // ], 'factories');
        // $this->publishes([
        //     __DIR__.'/database/migrations' => database_path('migrations'),
        // ], 'migrations');
        // $this->publishes([
        //     __DIR__.'/database/seeds' => database_path('seeds'),
        // ], 'seeds');

        // // Register the theme's commands
        // if ($this->app->runningInConsole()) {
        //     $this->commands([
        //         SeederCommand::class,
        //     ]);
        // }

        // // Register the theme's routes
        // $this->loadRoutesFrom(__DIR__.'/routes/web.php');
        // $this->loadRoutesFrom(__DIR__.'/routes/api.php');

        // // Register the theme's views
        // $this->loadViewsFrom(__DIR__.'/resources/views', 'theme-madmin');

        // // Register the theme's translations
        // $this->loadTranslationsFrom(__DIR__.'/resources/lang', 'theme-madmin');

        // // Register the theme's migrations
        // $this->loadMigrationsFrom(__DIR__.'/database/migrations');

        // // Register the theme's factories
        // $this->loadFactoriesFrom(__DIR__.'/database/factories');

        // // Register the theme's policies
        // $this->registerPolicies();

        // // Register the theme's middleware
        // $this->registerMiddleware();

        // // Register the theme's providers
        // $this->registerProviders();

        // // Register the theme's observers
        // $this->registerObservers();

        // // Register the theme's listeners
        // $this->registerListeners();

        // // Register the theme's events
        // $this->registerEvents();

        // // Register the theme's routes
        // $this->registerRoutes();

        // // Register the theme's commands
        // $this->registerCommands();

        // // Register the theme's helpers
        // $this->registerHelpers();

        // // Register the theme's views
        // $this->registerViews();

        // // Register the theme's translations
        // $this->registerTranslations();

        // // Register the theme's assets
        // $this->registerAssets();

        // // Register the theme's components
        // $this->registerComponents();

        // // Register the theme's widgets
        // $this->registerWidgets();

        // // Register the theme's menus
        // $this->registerMenus();

        // // Register the theme's breadcrumbs
        // $this->registerBreadcrumbs();

        // // Register the theme's forms
        // $this->registerForms();

        // // Register the theme's fields
        // $this->registerFields();

        // // Register the theme's validators
        // $this->registerValidators();

        // // Register the theme's filters
        // $this->registerFilters();

        // // Register the theme's directives
        // $this->registerDirectives();

        // // Register the theme's macros
        // $this->registerMacros();

        // // Register the theme's hooks
        // $this->registerHooks();

        // // Register the theme's shortcodes
        // $this->registerShortcodes();

        // // Register the theme's widgets
        // $this->registerWidgets();

    }
}
